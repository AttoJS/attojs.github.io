(self.webpackChunkvue_request_doc=self.webpackChunkvue_request_doc||[]).push([[190],{1280:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>j});var t=s(8133);const p=(0,t.Wm)("h1",{id:"高级用法"},[(0,t.Wm)("a",{class:"header-anchor",href:"#高级用法"},"#"),(0,t.Uk)(" 高级用法")],-1),o=(0,t.Wm)("p",null,[(0,t.Uk)("我们基于前面章节提到的基本用法做了进一步的封装，目前实现了 "),(0,t.Wm)("a",{href:"#pagination"},"分页"),(0,t.Uk)(" 这个场景。")],-1),e={id:"分页扩展"},c=(0,t.Wm)("a",{class:"header-anchor",href:"#分页扩展"},"#",-1),l=(0,t.Uk)(" 分页扩展 "),u=(0,t.Uk)("我们会自动帮你管理分页信息，如：当前页数、每页条数、总条数等。你只需要使用我们提供的 "),k=(0,t.Wm)("code",null,"changeCurrent",-1),i=(0,t.Uk)(" 和 "),r=(0,t.Wm)("code",null,"changePageSize",-1),g=(0,t.Uk)(" 即可轻松管理分页的数据。"),d=(0,t.Uk)("注意：我们会在 "),m=(0,t.Wm)("code",null,"params",-1),h=(0,t.Uk)(" 数组第一位注入分页所需的参数。"),v=(0,t.Uk)("更多可用配置请查看 "),f=(0,t.Uk)("分页扩展 API"),y=(0,t.uE)('<h3 id="用法"><a class="header-anchor" href="#用法">#</a> 用法</h3><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> usePagination <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="例子"><a class="header-anchor" href="#例子">#</a> 例子</h3>',3),w=(0,t.Uk)("你也可以配合 "),W=(0,t.Wm)("code",null,"ant-design-vue",-1),x=(0,t.Uk)(" 使用。这里我们提供了一个 demo，"),b={href:"https://2x.antdv.com/components/table-cn#components-table-demo-ajax",target:"_blank",rel:"noopener noreferrer"},U=(0,t.Uk)("点击查看"),z=(0,t.uE)('<div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> usePagination <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Loading<span class="token punctuation">,</span> Pagination <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vant&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;vant/lib/pagination/style&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;vant/lib/loading/style&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> getData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&#39;array|5&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@name&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>array<span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">testService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> total<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> result<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        total<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n        result<span class="token operator">:</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> current<span class="token punctuation">,</span> total<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> changeCurrent <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePagination</span><span class="token punctuation">(</span>testService<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span> 140px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n          </span><span class="token punctuation">{</span>loading<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Loading</span></span> <span class="token punctuation">/&gt;</span></span>\n          <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n              </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token operator">?.</span>result<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>i<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Pagination</span></span>\n          <span class="token attr-name">modelValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>current<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span>\n          <span class="token attr-name">total-items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>total<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span>\n          <span class="token attr-name">show-page-size</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pageSize<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span>\n          <span class="token attr-name">force-ellipses</span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">page<span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">changeCurrent</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',1),P={id:"loadmore"},_=(0,t.Wm)("a",{class:"header-anchor",href:"#loadmore"},"#",-1),q=(0,t.Uk)(" LoadMore "),C=(0,t.uE)('<p>TODO</p><h3 id="用法-1"><a class="header-anchor" href="#用法-1">#</a> 用法</h3><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useLoadMore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="例子-1"><a class="header-anchor" href="#例子-1">#</a> 例子</h3>',4),j={render:function(n,a){const s=(0,t.up)("Badge"),j=(0,t.up)("RouterLink"),L=(0,t.up)("OutboundLink"),D=(0,t.up)("PaginationDemo"),M=(0,t.up)("Demo");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,o,(0,t.Wm)("h2",e,[c,l,(0,t.Wm)(s,{text:"New in beta.8"})]),(0,t.Wm)("p",null,[u,(0,t.Wm)(j,{to:"/zh/api/pagination.html#changecurrent"},{default:(0,t.w5)((()=>[k])),_:1}),i,(0,t.Wm)(j,{to:"/zh/api/pagination.html#changepagesize"},{default:(0,t.w5)((()=>[r])),_:1}),g]),(0,t.Wm)("p",null,[(0,t.Wm)("strong",null,[d,(0,t.Wm)(j,{to:"/zh/api/#params"},{default:(0,t.w5)((()=>[m])),_:1}),h])]),(0,t.Wm)("p",null,[v,(0,t.Wm)(j,{to:"/zh/api/pagination.html"},{default:(0,t.w5)((()=>[f])),_:1})]),y,(0,t.Wm)("blockquote",null,[(0,t.Wm)("p",null,[w,W,x,(0,t.Wm)("a",b,[U,(0,t.Wm)(L)])])]),(0,t.Wm)(M,null,{default:(0,t.w5)((()=>[(0,t.Wm)(D)])),_:1}),z,(0,t.Wm)("h2",P,[_,q,(0,t.Wm)(s,{text:"todo"})]),C],64)}}},3974:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>t});const t={key:"v-540402ea",path:"/zh/guide/documentation/advancedUsage.html",title:"高级用法",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"分页扩展",slug:"分页扩展",children:[{level:3,title:"用法",slug:"用法",children:[]},{level:3,title:"例子",slug:"例子",children:[]}]},{level:2,title:"LoadMore",slug:"loadmore",children:[{level:3,title:"用法",slug:"用法-1",children:[]},{level:3,title:"例子",slug:"例子-1",children:[]}]}],filePathRelative:"zh/guide/documentation/advancedUsage.md",git:{updatedTime:1614655377e3,contributors:[]}}}}]);