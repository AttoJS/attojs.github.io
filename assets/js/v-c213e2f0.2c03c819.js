(self.webpackChunkvue_request_doc=self.webpackChunkvue_request_doc||[]).push([[399],{7252:(o,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>W});var n=s(8133);const e=(0,n.Wm)("h1",{id:"\u8F6E\u8BE2"},[(0,n.Wm)("a",{class:"header-anchor",href:"#\u8F6E\u8BE2"},"#"),(0,n.Uk)(" \u8F6E\u8BE2")],-1),c=(0,n.Wm)("p",null,[(0,n.Uk)("\u5982\u679C\u4F60\u6709\u4E00\u4E2A\u9700\u8981\u5B9A\u65F6\u8BF7\u6C42\u7684 API \u63A5\u53E3\uFF0C\u6211\u4EEC\u5185\u7F6E\u4E86\u4E00\u4E2A "),(0,n.Wm)("strong",null,"\u8F6E\u8BE2"),(0,n.Uk)(" \u7684\u9009\u9879\uFF0C\u80FD\u8F7B\u677E\u5E2E\u4F60\u89E3\u51B3\u8FD9\u4EF6\u4E8B\u60C5\u3002")],-1),u=(0,n.Uk)("\u5982\u4E0B\u6240\u793A\uFF0C\u4F60\u53EA\u9700\u8981\u8BBE\u7F6E\u4E00\u4E2A "),l=(0,n.Wm)("code",null,"pollingInterval",-1),k=(0,n.Uk)(" \u6765\u544A\u8BC9\u6211\u4EEC\u8F6E\u8BE2\u7684\u95F4\u9694\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09"),i=(0,n.uE)(`<div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">testService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>testService<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      pollingInterval<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>loading<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&#39;loading...&#39;</span> <span class="token operator">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="pollingwhenhidden"><a class="header-anchor" href="#pollingwhenhidden">#</a> pollingWhenHidden</h2><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F1A\u5728\u5C4F\u5E55\u4E0D\u53EF\u89C1\u65F6\u6682\u505C\u8F6E\u8BE2\u3002\u5F53\u5C4F\u5E55\u91CD\u65B0\u805A\u7126\u65F6\uFF0C\u91CD\u65B0\u6FC0\u6D3B\u8F6E\u8BE2\u3002\u5F53\u7136\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E <code>pollingWhenHidden = true</code>\uFF0C\u6765\u4F7F\u5F97\u5C4F\u5E55\u4E0D\u53EF\u89C1\u65F6\u4E5F\u7EE7\u7EED\u53D1\u8D77\u8BF7\u6C42\u3002</p>`,3),r=(0,n.uE)(`<div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-request&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">function</span> <span class="token function">testService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>testService<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      pollingInterval<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
      pollingWhenHidden<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>loading<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&quot;loading...&quot;</span> <span class="token operator">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="pollingwhenoffline"><a class="header-anchor" href="#pollingwhenoffline">#</a> pollingWhenOffline</h2><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4F1A\u5728\u7F51\u7EDC\u65AD\u5F00\u65F6\u65F6\u6682\u505C\u8F6E\u8BE2\u3002\u5F53\u7F51\u7EDC\u6062\u590D\u6B63\u5E38\u540E\uFF0C\u91CD\u65B0\u6FC0\u6D3B\u8F6E\u8BE2\u3002\u5F53\u7136\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E <code>pollingWhenOffline = true</code>\uFF0C\u6765\u4F7F\u5F97\u7F51\u7EDC\u65AD\u5F00\u65F6\u4E5F\u7EE7\u7EED\u53D1\u8D77\u8BF7\u6C42\u3002</p>`,3),d={class:"custom-block warning"},g=(0,n.Wm)("p",{class:"custom-block-title"},"\u6CE8\u610F",-1),m=(0,n.Uk)("VueRequest \u662F\u901A\u8FC7\u76D1\u542C "),h=(0,n.Wm)("code",null,"window.ononline",-1),f=(0,n.Uk)(" \u6765\u68C0\u67E5\u662F\u5426\u6B63\u5E38\u8054\u7F51\u7684\u3002\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u4E2A\u4E8B\u4EF6\u53EF\u80FD\u4E0D\u53EF\u9760\u3002\u8BE6\u7EC6\u8BF7\u67E5\u9605 "),w={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document/ononline",target:"_blank",rel:"noopener noreferrer"},v=(0,n.Uk)("MDN"),_=(0,n.uE)(`<div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-request&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">function</span> <span class="token function">testService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>testService<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      pollingInterval<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
      pollingWhenOffline<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>loading<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&quot;loading...&quot;</span> <span class="token operator">:</span> data<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,1);function y(C,O){const q=(0,n.up)("RouterLink"),b=(0,n.up)("pollingDemo"),t=(0,n.up)("Demo"),x=(0,n.up)("pollingWhenHiddenDemo"),D=(0,n.up)("OutboundLink"),R=(0,n.up)("pollingWhenOfflineDemo");return(0,n.wg)(),(0,n.j4)(n.HY,null,[e,c,(0,n.Wm)("p",null,[u,(0,n.Wm)(q,{to:"/vue-request-docs/zh/api/options.html#pollingInterval"},{default:(0,n.w5)(()=>[l]),_:1}),k]),(0,n.Wm)(t,null,{default:(0,n.w5)(()=>[(0,n.Wm)(b)]),_:1}),i,(0,n.Wm)(t,null,{default:(0,n.w5)(()=>[(0,n.Wm)(x)]),_:1}),r,(0,n.Wm)("div",d,[g,(0,n.Wm)("p",null,[m,h,f,(0,n.Wm)("a",w,[v,(0,n.Wm)(D)])])]),(0,n.Wm)(t,null,{default:(0,n.w5)(()=>[(0,n.Wm)(R)]),_:1}),_],64)}const p={};p.render=y;const W=p},3997:(o,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>n});const n={key:"v-c213e2f0",path:"/zh/guide/documents/polling.html",title:"\u8F6E\u8BE2",frontmatter:{},excerpt:"",headers:[{level:2,title:"pollingWhenHidden",slug:"pollingwhenhidden",children:[]},{level:2,title:"pollingWhenOffline",slug:"pollingwhenoffline",children:[]}],filePathRelative:"zh/guide/documents/polling.md",git:{updatedTime:1609810932e3,contributors:[]}}}}]);
