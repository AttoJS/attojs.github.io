(self.webpackChunkvue_request_doc=self.webpackChunkvue_request_doc||[]).push([[751],{4399:(o,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>y});var n=s(8133);const e=(0,n.Wm)("h1",{id:"\u4F9D\u8D56\u8BF7\u6C42"},[(0,n.Wm)("a",{class:"header-anchor",href:"#\u4F9D\u8D56\u8BF7\u6C42"},"#"),(0,n.Uk)(" \u4F9D\u8D56\u8BF7\u6C42")],-1),c=(0,n.Uk)("\u6709\u4E9B\u65F6\u5019\uFF0C\u4F60\u53EF\u80FD\u4F1A\u9047\u5230\u7F51\u7EDC\u8BF7\u6C42\u76F8\u4E92\u4F9D\u8D56\u7684\u60C5\u51B5\u3002\u4F8B\u5982 B \u8BF7\u6C42\u7684\u8BF7\u6C42\u53C2\u6570\uFF0C\u4F9D\u8D56 A \u8BF7\u6C42\u7684\u8FD4\u56DE\u7ED3\u679C\u3002\u8FD9\u65F6\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 "),u=(0,n.Wm)("code",null,"ready",-1),l=(0,n.Uk)(" \u6765\u5904\u7406\u8FD9\u79CD\u4F9D\u8D56\u5173\u7CFB\u3002"),k=(0,n.Uk)("\u5982\u4E0B\u6240\u793A\uFF0C"),i=(0,n.Wm)("code",null,"ready",-1),r=(0,n.Uk)(" \u63A5\u6536\u4E00\u4E2A "),d=(0,n.Wm)("code",null,"Ref<boolean>",-1),g=(0,n.Uk)("\uFF0C\u5F53\u7ED3\u679C\u4E3A "),m=(0,n.Wm)("code",null,"true",-1),f=(0,n.Uk)(" \u65F6\uFF0C\u7B2C\u4E8C\u4E2A\u8BF7\u6C42\u5C06\u4F1A\u53D1\u51FA\u3002"),h=(0,n.uE)(`<div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">loginService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;@name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> token<span class="token punctuation">,</span> loading<span class="token operator">:</span> tokenLoading<span class="token punctuation">,</span> run <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>loginService<span class="token punctuation">,</span> <span class="token punctuation">{</span> manual<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>getUser<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      ready<span class="token operator">:</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>token<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>value
            <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">User Name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
            <span class="token operator">:</span> loading<span class="token punctuation">.</span>value
            <span class="token operator">?</span> <span class="token string">&#39;loading...&#39;</span>
            <span class="token operator">:</span> <span class="token string">&#39;Please login first&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>token<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span>tokenLoading<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&#39;Login...&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Login&#39;</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,1);function v(x,b){const p=(0,n.up)("RouterLink"),_=(0,n.up)("ReadyDemo"),w=(0,n.up)("Demo");return(0,n.wg)(),(0,n.j4)(n.HY,null,[e,(0,n.Wm)("p",null,[c,(0,n.Wm)(p,{to:"/vue-request-docs/zh/api/options.html#ready"},{default:(0,n.w5)(()=>[u]),_:1}),l]),(0,n.Wm)("p",null,[k,(0,n.Wm)(p,{to:"/vue-request-docs/zh/api/options.html#ready"},{default:(0,n.w5)(()=>[i]),_:1}),r,d,g,m,f]),(0,n.Wm)(w,null,{default:(0,n.w5)(()=>[(0,n.Wm)(_)]),_:1}),h],64)}const t={};t.render=v;const y=t},7002:(o,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>n});const n={key:"v-1a17ddb0",path:"/zh/guide/documents/ready.html",title:"\u4F9D\u8D56\u8BF7\u6C42",frontmatter:{},excerpt:"",headers:[],filePathRelative:"zh/guide/documents/ready.md",git:{updatedTime:1609810932e3,contributors:[]}}}}]);
