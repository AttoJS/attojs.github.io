(self.webpackChunkvue_request_doc=self.webpackChunkvue_request_doc||[]).push([[105],{4257:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>u});var t=a(8133);const p=(0,t.uE)('<h1 id="延迟加载状态"><a class="header-anchor" href="#延迟加载状态">#</a> 延迟加载状态</h1><p>有些时候，当请求返回足够快的情况下，loading 可能会在短时间内完成 <strong><code>false -&gt; true -&gt; false</code></strong> 状态的切换。这时候，加载动画可能会出现闪烁的情况（特别是占满一整屏的动画），这给会用户带来糟糕的体验。</p><p>因此最好的方法就是设定一个延迟值，当等待时间大于延迟值时 loading 才会被设置成 <code>true</code>，如下所示</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span><span class="token string">&#39;api/users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      loadingDelay<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>data<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div>',4),e=(0,t.Uk)("当然，世事无绝对，假如我们把 "),o=(0,t.Wm)("code",null,"loadingDelay",-1),c=(0,t.Uk)(" 设置成了 500ms ，但实际上我的请求在 510ms 完成了，这时还是无法避免会出现闪烁。"),u={render:function(n,s){const a=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("p",null,[e,(0,t.Wm)(a,{to:"/vue-request-docs/zh/api/options.html#loadingdelay"},{default:(0,t.w5)((()=>[o])),_:1}),c])],64)}}},2551:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-ed6e2180",path:"/zh/guide/documents/loadingDelay.html",title:"延迟加载状态",frontmatter:{},excerpt:"",headers:[],filePathRelative:"zh/guide/documents/loadingDelay.md",git:{updatedTime:1613724187e3,contributors:[]}}}}]);