(self.webpackChunkvue_request_doc=self.webpackChunkvue_request_doc||[]).push([[980],{3680:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>f});var t=a(8133);const p=(0,t.Wm)("h1",{id:"全局配置"},[(0,t.Wm)("a",{class:"header-anchor",href:"#全局配置"},"#"),(0,t.Uk)(" 全局配置")],-1),o=(0,t.Wm)("p",null,[(0,t.Uk)("我们通过导出 "),(0,t.Wm)("code",null,"setGlobalOptions"),(0,t.Uk)(" 方法，来给你控制一些配置，避免重复繁琐地填入一些相同的配置")],-1),e=(0,t.Wm)("h2",{id:"基于构建工具"},[(0,t.Wm)("a",{class:"header-anchor",href:"#基于构建工具"},"#"),(0,t.Uk)(" 基于构建工具")],-1),c=(0,t.Uk)("如："),l={href:"https://github.com/vuejs/vue-cli",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("vue-cli"),k=(0,t.Uk)("、"),i={href:"https://github.com/vitejs/vite",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("vite"),g=(0,t.Uk)("在下面的示例中，当前项目中所有使用到的 VueRequest 都能读取到传入的配置。该配置的作用是把请求的触发方式改为手动触发。更多可配置的全局属性，请参考 "),d=(0,t.Uk)("globalOptions"),m=(0,t.uE)('<div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token comment">// main.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> setGlobalOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n<span class="token function">setGlobalOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  manual<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n\n<span class="token comment">// App.tsx</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> user <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span><span class="token string">&#39;api/user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> job <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span><span class="token string">&#39;api/job&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> manual<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 覆盖全局配置</span>\n\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="使用组件注入配置"><a class="header-anchor" href="#使用组件注入配置">#</a> 使用组件注入配置</h3><p>除了上述使用 API 的方式去设置全局变量以外，你还可以通过我们导出的 <code>RequestConfig</code> 组件，进行更加精细化的配置。如下所示，可以为不同的组件传入不同的配置。</p><div class="language-tsx ext-tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-request&#39;</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;App&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RequestConfig</span></span> <span class="token attr-name">config</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> loadingDelay<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ComponentA</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RequestConfig</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RequestConfig</span></span> <span class="token attr-name">config</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> loadingDelay<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ComponentB</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RequestConfig</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="基于-cdn"><a class="header-anchor" href="#基于-cdn">#</a> 基于 CDN</h2><p>如果你通过 CDN 来使用 VueRequest 的，你可以通过以下方式来设置全局配置。我们在 <code>VueRequest</code> 的实例上放置了 <code>setGlobalOptions</code> 方法</p><div class="language-markup ext-html"><pre class="language-markup"><code><span class="token comment">&lt;!-- ... --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue-request.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  VueRequest<span class="token punctuation">.</span><span class="token function">setGlobalOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    cacheTime<span class="token operator">:</span> <span class="token number">12</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>配置权重：<code>setGlobalOptions</code> &lt; <code>RequestConfig</code> &lt; <code>局部 config</code></p></div>',8),f={render:function(n,s){const a=(0,t.up)("OutboundLink"),f=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,o,e,(0,t.Wm)("blockquote",null,[(0,t.Wm)("p",null,[c,(0,t.Wm)("a",l,[u,(0,t.Wm)(a)]),k,(0,t.Wm)("a",i,[r,(0,t.Wm)(a)])])]),(0,t.Wm)("p",null,[g,(0,t.Wm)(f,{to:"/vue-request-docs/zh/guide/guide/options/globalOptions.html"},{default:(0,t.w5)((()=>[d])),_:1})]),m],64)}}},577:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-4165e713",path:"/zh/guide/documents/global-options.html",title:"全局配置",frontmatter:{},excerpt:"",headers:[{level:2,title:"基于构建工具",slug:"基于构建工具",children:[{level:3,title:"使用组件注入配置",slug:"使用组件注入配置",children:[]}]},{level:2,title:"基于 CDN",slug:"基于-cdn",children:[]}],filePathRelative:"zh/guide/documents/global-options.md",git:{updatedTime:1613799828e3,contributors:[]}}}}]);